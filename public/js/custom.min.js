$.ajaxSetup({
    headers: {
        'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
    }
});
$.ajax({
    url: location.origin + '/states',
    dataType: 'json'
})
.done(function (res) {
    for (var r in res) {
        $("#state").append("<option value='" + r + "'>" + res[r] + "</option>");
    }
});
/*funciones */
function disabledDocs($string) {
    let value = $string;
    $('#foreigncountry, #patient_id').removeAttr('disabled');
    if (value == 'Venezolano/a') {
        $('#foreigncountry').attr('disabled', '').val('');
    } else if (value == 'N/p') {
        $('#foreigncountry, #patient_id').attr('disabled', '').val('');
    }
}
$("#state").change(function () {
    selectMunicipalities($(this).val());
});
function selectMunicipalities(id) {
    $.ajax({
        url: location.origin + '/municipalities',
        method: 'POST',
        dataType: 'json',
        data: {
            id: id
        }
    })
    .done(function (res) {
        $("#municipality").html("<option value='' disabled selected>Ingrese el municipio</option>");
        $("#parish").html("<option value='' disabled selected>Ingrese la parroquia</option>");
        for (var r in res) {
            $("#municipality").append("<option value='" + r + "'>" + res[r] + "</option>");
        }
    });
}
function selectParishes(id) {
    $.ajax({
        url: location.origin + '/parishes',
        method: 'POST',
        dataType: 'json',
        data: {
            id: id
        }
    })
    .done(function (res) {
        $("#parish").html("<option value='' disabled selected>Ingrese la parroquia</option>");
        for (var r in res) {
            $("#parish").append("<option value='" + r + "'>" + res[r] + "</option>");
        }
    });
}
$("#municipality").change(function () {
    selectParishes($(this).val());
});
$.ajax({
    url: location.origin + '/foreigncountries',
    dataType: 'json'
})
.done(function (res) {
    for (var r in res) {
        $("#foreigncountry").append("<option value='" + r + "'>" + res[r] + "</option>");
    }
});
$.ajax({
    url: location.origin + '/triages',
    dataType: 'json'
})
.done(function (res) {
    for (var r in res) {
        $("#triage_id").append("<option value='" + r + "'>" + res[r] + "</option>");
    }
});
var twotable = $('#new-records-table').DataTable({
    processing: true,
    serverSide: true,
    render: true,
    dom: 'Bfrtip',
    lengthMenu: [
    [ 10, 25, 50, 100, 1000, -1 ],
    [ '10 filas', '25 filas', '50 filas', '100 filas', '1000 filas', 'Mostrar Todo' ]
    ],
    buttons : [
    {
        extend : 'collection',
        text:      '<span class="fa fa-download"></span> Exportar',
        className: 'btn-xs bg-purple',
        init: function(api, node, config) 
        {
            $(node).removeClass('btn-default')
        },
        buttons : [
        { extend: 'copy', title: 'Historias copiadas', text: '<span class="fa fa-copy"></span> Copiar filas' },
        { extend: 'print', title: 'Historias impresas', text: '<span class="fa fa-print"></span> Imprimir filas' },
        { extend: 'excel', title: 'Formato EXCEL de historias', text: '<span class="fa fa-file-excel-o"></span> Exportar EXCEL' },
        { extend: 'csv', title: 'Formato CSV de historias', text: '<span class="fa fa-quote-right"></span> Exportar CSV' },
        { extend: 'pdf', title: 'Formato PDF de historias', text: '<span class="fa fa-file-pdf-o"></span> Exportar PDF' },
        { extend: 'colvis', text: '<span class="fa fa-eye"></span> Mostrar columnas' },
        { extend: 'pageLength', text: '<span class="fa fa-plus-square-o"></span> Mostrar filas' },
        ],
    } 
    ],
    searching: false,
    language: {
        url: '../plugins/SpanishDataTables.json'
    },
    columns: [{
        data: 'number_record',
        name: 'number_record'
    },
    {
        data: 'patient_id',
        name: 'patient_id'
    },
    {
        data: 'name',
        name: 'name'
    },
    {
        data: 'last_name',
        name: 'last_name'
    },
    {
        data: 'birthdate',
        name: 'birthdate'
    },
    {
        data: 'admission_date',
        name: 'admission_date'
    },
    {
        data: 'action',
        searchable: false,
        sortable: false,
        orderable: false,
        render: null
    }
    ],
    ajax: {
        type: 'POST',
        url: 'api/newindex',
        data: function (d) {
            d.number_record = $('input[name=number_record]').val();
            d.patient_id = $('input[name=patient_id]').val();
            d.name = $('input[name=name]').val();
            d.last_name = $('input[name=last_name]').val();
            d.birthdate = $('input[name=birthdate]').val();
            d.admission_date = $('input[name=admission_date]').val();
        },
        beforeSend: function (xhr) {
            xhr.setRequestHeader('Authorization');
        },
        complete: function () {
            $(".show-index, .edit-index, .destroy-index").click(function (e) {
                restoreMsgHis();
                e.preventDefault();
                let url = $(this).attr('href');
                let update = $(this).attr('update');
                let show = $(this).attr('class').lastIndexOf('show');
                let edit = $(this).attr('class').lastIndexOf('edit');
                let destroy = $(this).attr('class').lastIndexOf('destroy');
                if (destroy !== -1) {
                    var method = 'POST';
                    var data = {
                        '_method': 'DELETE',
                    };
                    swal({
                        title: 'Esta usted seguro de eliminarlo?',
                        text: "No podra revertirlo!",
                        type: 'warning',
                        showCancelButton: true,
                        cancelButtonColor: '#d33',
                        cancelButtonText: 'Cancelar',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Si, eliminarlo!'
                    }).then(function (r) {
                        if (r.value){

                            $.ajax({
                                url: url,
                                method: method,
                                dataType: 'json',
                                data: data
                            })
                            .done(function (res) {

                                twotable.draw();
                                swal({
                                    title: 'Listo!',
                                    text: data.message,
                                    type: 'success',
                                    timer: '1500'
                                })

                            });

                        }
                    });

                    return 
                } else {
                    var method = 'GET';
                    var data = {};
                }
                $.ajax({
                    url: url,
                    method: method,
                    dataType: 'json',
                    data: data
                })
                .done(function (res) {
                    if (show !== -1) {
                        $("#records td#number_record").text(res.number_record);
                        $("#records td#type_doc").text(res.type_doc);
                        $("#records td#patient_id").text(res.patient_id);
                        $("#records td#name").text(res.name);
                        $("#records td#last_name").text(res.last_name);
                        $("#records td#sex").text(res.sex);
                        $("#records td#birthdate").text(res.birthdate);
                        $("#records td#admission_date").text(res.admission_date);
                        $("#records td#triage").text(res.triage.triage);
                        $("#records td#egress_date").text(res.egress_date);
                        $("#records td#observation").text(res.observation);
                        $("#records td#user").text(res.user.name);
                        if (res.parish) {
                            $("#records td#state").text(res.parish.municipalities.states.state);
                            $("#records td#municipality").text(res.parish.municipalities.municipality);
                            $("#records td#parish").text(res.parish.parish);
                        }
                        if (res.foreign_country) {
                            $("#records td#foreigncountry").text(res.foreign_country.foreign_country);
                        }
                        $('#modal-showr .modal-title').text('Historia completa');
                        $('#modal-showr').modal('toggle');
                    } else if (edit !== -1) {
                        $('#modalform form').attr('action', update);
                        $('#modalform form input[name=_method]').val('PUT');
                        $('#modalform form')[0].reset();
                        $('#modalform .modal-title').text('Editar Historia');
                        $("#modalform #number_record").val(res.number_record);
                        $("#modalform #type_doc").val(res.type_doc);
                        $("#modalform #patient_id").val(res.patient_id);
                        $("#modalform #name").val(res.name);
                        $("#modalform #last_name").val(res.last_name);
                        $("#modalform #sex").val(res.sex);
                        $("#modalform #birthdate").val(res.birthdate);
                        $("#modalform #admission_date").val(res.admission_date);
                        $("#modalform #triage_id").val(res.triage.id);
                        $("#modalform #egress_date").val(res.egress_date);
                        $("#modalform #observation").val(res.observation);
                        if (res.foreign_country) {
                            $("#modalform #foreigncountry").val(res.foreign_country.id);
                        }
                        if (res.parish) {
                            $("#modalform #state").val(res.parish.municipalities.states.id);
                            selectMunicipalities(res.parish.municipalities.states.id);
                            selectParishes(res.parish.municipalities.id);
                            setTimeout(function () {
                                $("#modalform #municipality").val(res.parish.municipalities.id);
                                $("#modalform #parish").val(res.parish.id);
                            }, 900);
                        }
                        disabledDocs($('#type_doc').val());
                        $('#modalform').modal('toggle');
                    }
                });
            });
},
},
});
var onetable = $('#records-table').DataTable({
    processing: true,
    serverSide: true,
    render: true,
    searching: false,
    language: {
        url: '../plugins/SpanishDataTables.json'
    },
    columns: [{
        data: 'number_record',
        name: 'number_record'
    },
    {
        data: 'patient_id',
        name: 'patient_id'
    },
    {
        data: 'name',
        name: 'name'
    },
    {
        data: 'last_name',
        name: 'last_name'
    },
    {
        data: 'birthdate',
        name: 'birthdate'
    },
    {
        data: 'action',
        searchable: false,
        sortable: false,
        orderable: false,
        render: null
    }
    ],
    ajax: {
        type: 'POST',
        url: 'api/index',
        data: function (d) {
            d.number_record = $('input[name=number_record]').val();
            d.patient_id = $('input[name=patient_id]').val();
            d.name = $('input[name=name]').val();
            d.last_name = $('input[name=last_name]').val();
            d.birthdate = $('input[name=birthdate]').val();
            d.admission_date = $('input[name=admission_date]').val();
        },
        beforeSend: function (xhr) {
            xhr.setRequestHeader('Authorization');
        },
        complete: function () {
            $(".show-index, .edit-index, .destroy-index").click(function (e) {
                restoreMsgHis();
                e.preventDefault();
                let url = $(this).attr('href');
                let update = $(this).attr('update');
                let show = $(this).attr('class').lastIndexOf('show');
                let edit = $(this).attr('class').lastIndexOf('edit');
                let destroy = $(this).attr('class').lastIndexOf('destroy');
                if (destroy !== -1) {
                    var method = 'POST';
                    var data = {
                        '_method': 'DELETE',
                    };
                    swal({
                        title: 'Esta usted seguro de eliminarlo?',
                        text: "No podra revertirlo!",
                        type: 'warning',
                        showCancelButton: true,
                        cancelButtonColor: '#d33',
                        cancelButtonText: 'Cancelar',
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'Si, eliminarlo!'
                    }).then(function (r) {
                        if (r.value){

                            $.ajax({
                                url: url,
                                method: method,
                                dataType: 'json',
                                data: data
                            })
                            .done(function (res) {

                                table.draw();
                                swal({
                                    title: 'Listo!',
                                    text: data.message,
                                    type: 'success',
                                    timer: '1500'
                                })

                            });

                        }
                    });

                    return 
                } else {
                    var method = 'GET';
                    var data = {};
                }
                $.ajax({
                    url: url,
                    method: method,
                    dataType: 'json',
                    data: data
                })
                .done(function (res) {
                    if (show !== -1) {
                        $("#records td#number_record").text(res.number_record);

                        $("#records td#patient_id").text(res.patient_id);
                        $("#records td#name").text(res.name);
                        $("#records td#last_name").text(res.last_name);

                        $("#records td#birthdate").text(res.birthdate);

                        $("#records td#triage").text(res.triage.triage);

                        $("#records td#observation").text(res.observation);
                      
                        $('#modal-showr .modal-title').text('Historia completa');
                        $('#modal-showr').modal('toggle');
                    } else if (edit !== -1) {
                      
                    } else if (destroy !== -1) {
                        
                    }

                });
            });
},
},
});
$('#type_doc').change(function () {
    disabledDocs($(this).val());
});
$('#searchrec1').on('submit', function(e) {
    onetable.draw();
    e.preventDefault();
});
$('#searchrec2').on('submit', function(e) {
    twotable.draw();
    e.preventDefault();
});
$("#searchrec").click(function (e) {
    e.preventDefault();
    $("div#header2").fadeToggle();
});
$('#addform').click(function (e) {
    e.preventDefault();
    restoreMsgHis();
    let href = $(this).attr('href');
    $('#modalform form').attr('action', href);
    $('#modalform form input[name=_method]').val('POST');
    $('#modalform form')[0].reset();
    $('#modalform .modal-title').text('Crear Historia');
    $('#modalform').modal('toggle');
});
$('#modalform form#formu').submit(function (e) {
    e.preventDefault();
    restoreMsgHis();
    let url = $(this).attr('action');
    let data = $(this).serialize();
    $.ajax({
        url: url,
        method: 'POST',
        dataType: 'json',
        data: data
    })
    .done(function (response) {
        $('#modalform').modal('toggle');
        $('#modalform form')[0].reset();
        twotable.draw();
    })
    .fail(function (errors) {
        errors = errors.responseJSON.errors;
        for (error in errors) {
            $('small#' + error).html(errors[error][0]).removeClass('text-muted').addClass('text-red');
        }
    });
    restoreMsgHis();
});
function restoreMsgHis() {
    let msg = {
        number_record: 'Necesario ingresar por lo menos entre 1-11 digito.',
        type_doc: 'Documento',
        patient_id: 'Es necesario ingresar entre 4-8 digitos.',
        name: 'Ingrese los nombres del paciente.',
        last_name: 'Ingrese los apellidos del paciente.',
        sex: 'Ingrese el sexo del paciente.',
        birthdate: 'Ingrese la fecha de nacimiento del paciente.',
        admission_date: 'Ingrese la fecha de ingreso del paciente.',
        egress_date: 'Ingrese la fecha de egreso del paciente.',
        state: 'Ingrese el estado de donde proviene del paciente.',
        municipality: 'Ingrese el municipio de donde proviene del paciente.',
        parishe: 'Ingrese la parroquia de donde proviene del paciente.',
        foreigncountry: 'Ingrese el pais de donde proviene paciente.',
        triage_id: 'Ingrese el area de llegada del paciente.',
        observations: 'Ingrese algunas obervaciones acerca del paciente o su historia de ser necesario.'
    }
    let $form = $('#modalform');
    let inputs = $('#modalform form').find('input, select');
    for (let i = 0; i < inputs.length; i++) {
        if (inputs[i].id) {
            let $element = $form.find('small#'+inputs[i].id)[0]
            $($element).text('')
            $($element).text(msg[inputs[i].id]).removeClass('text-red')
        }
    }

}
var table = $('#user-table').DataTable({
    processing: true,
    serverSide: true,
    ajax: "/api/user",
    language: {
        url: '../plugins/SpanishDataTables.json'
    },
    columns: [
    {data: 'name', name: 'name'},
    {data: 'last_name', name: 'last_name'},
    {data: 'email', name: 'email'},
    {data: 'type', name: 'type'},
    {
        data: 'action',
        searchable: false,
        sortable: false,
        orderable: false,
        render: null
    }
    ]
});
function addForm() {
    save_method = "add";
    $('input[name=_method]').val('POST');
    $('#modal-form').modal('show');
    $('#modal-form form')[0].reset();
    $('.modal-title').text('Crear usuario');
}
function editForm(id) {
    $('#id').val(id);
    save_method = 'edit';
    $('input[name=_method]').val('PATCH');
    $('#modal-form form')[0].reset();
    $.ajax({
url: "/user/" + id + "/edit",
type: "GET",
dataType: "JSON",
success: function(data) {
    $('#modal-form').modal('show');
    $('.modal-title').text('Editar usuario');
    $('#name').val(data.name);
    $('#last_name').val(data.last_name);
    $('#password').val(data.password);
    $('#type').val(data.type);
    $('#email').val(data.email);
},
error : function() {
    alert("Nothing Data");
}
});
}
function deleteData(id){
    var csrf_token = $('meta[name="csrf-token"]').attr('content');
    swal({
        title: 'Esta usted seguro de eliminarlo?',
        text: "No podra revertirlo!",
        type: 'warning',
        showCancelButton: true,
        cancelButtonColor: '#d33',
        cancelButtonText: 'Cancelar',
        confirmButtonColor: '#3085d6',
        confirmButtonText: 'Si, eliminarlo!'
    }).then(function (r) {
        if (r.value){
            $.ajax({
url: "/user/" + id,
type : "POST",
data : {'_method' : 'DELETE', '_token' : csrf_token},
success : function(data) {
    table.ajax.reload();
    swal({
        title: 'Success!',
        text: data.message,
        type: 'success',
        timer: '1500'
    })
 table.draw();
},
error : function () {
    swal({
        title: 'Oops...',
        text: data.message,
        type: 'error',
        timer: '1500'
    })
}
});
        }
    });
}
$(function(){
    $('#modal-form form').validator().on('submit', function (e) {
        if (!e.isDefaultPrevented()){
            var id = $('input#id').val();
            if (save_method == 'add') url = "/user";
            else url = "/user/" + id;
            $.ajax({
                url : url,
                type : "POST",
                data: new FormData($("#modal-form form")[0]),
                contentType: false,
                processData: false,
                success : function(data) {
                    $('#modal-form').modal('hide');
                    table.ajax.reload();
                    swal({
                        title: 'Listo!',
                        text: data.message,
                        type: 'success',
                        timer: '1500'
                    })
                },
                error : function(data){
                    swal({
                        title: 'Oops...',
                        text: data.message,
                        type: 'error',
                        timer: '1500'
                    })
                }
            });
            return false;
        }
    });
});
$('.date').datepicker({
    format: "yyyy-mm-dd",
    clearBtn: true,
    language: "es",
    orientation: "bottom auto",
    autoclose: true,
    todayHighlight: true
});
